install.packages("devtools")
library(devtools)
library(devtools)
library("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
trace(utils:::unpackPkgZip, edit=TRUE)
install.packages("devtools")
library(devtools)
devtools::install_github("ThomasSiegmund/D3TableFilter")
install_github("ThomasSiegmund/D3TableFilter")
install_github("ThomasSiegmund\\D3TableFilter")
install_github("ThomasSiegmund/D3TableFilter")
install_github("ThomasSiegmund/*")
install_github("ThomasSiegmund")
install_local("D3TableFilter-master")
install_local(path = "D3TableFilter-master/")
install.packages("crosstalk")
install_github("ThomasSiegmund/D3TableFilter", host = 'https://github.com/')
install_github("ThomasSiegmund/D3TableFilter", host = 'https://github.com')
install_github("ThomasSiegmund/D3TableFilter")
install_github("ThomasSiegmund/D3TableFilter/master")
install.packages(RJDBC)
install.packages("RJDBC")
require(RJDBC)
drv <- JDBC("oracle.jdbc.driver.OracleDriver","C:\\code\\ojdbc6.jar")
conn <- dbConnect(drv,"jdbc:oracle:thin:@//OSSG105P.cs.boeing.com:1521/STL_PPHPMAS","PMASPROJECTSNOW","projectice")
conn <- dbConnect(drv,"jdbc:oracle:thin:@//OSSG105P.cs.boeing.com:1521/ora12102dbjan2018","PMASPROJECTSNOW","projectice")
conn <- dbConnect(drv,"jdbc:oracle:thin:@ldap://oidlbr.cs.boeing.com:3097/stl_pphpmas,cn=OracleContext,dc=boeingdb","PMASPROJECTSNOW","projectice")
qry <- "SELECT * FROM PMAS.LABOR_OTS_SUMMARY_PHL where LAB_DT > sysdate - 5"
tbl <- dbSendQuery(conn,qry)
View(tbl)
tbl <- dbGetQuery(conn,qry)
View(tbl)
pmasDB <- "stl_pphpmas"
conn <- dbConnect(drv,paste0("jdbc:oracle:thin:@ldap://oidlbr.cs.boeing.com:3097/",pmasDB,"cn=OracleContext,dc=boeingdb"),"PMASPROJECTSNOW","projectice")
connStr <- paste0("jdbc:oracle:thin:@ldap://oidlbr.cs.boeing.com:3097/",pmasDB,"cn=OracleContext,dc=boeingdb")
connStr
conn <- dbConnect(drv,paste0("jdbc:oracle:thin:@ldap://oidlbr.cs.boeing.com:3097/",pmasDB,",cn=OracleContext,dc=boeingdb"),"PMASPROJECTSNOW","projectice")
ojdbcjarPath <- "C:\\code\\ojdbc6.jar"
drv <- JDBC("oracle.jdbc.driver.OracleDriver",ojdbcjarPath)
pmasDB <- "stl_pphpmas" ### enter the instance you want here
conn <- dbConnect(drv,paste0("jdbc:oracle:thin:@ldap://oidlbr.cs.boeing.com:3097/",pmasDB,",cn=OracleContext,dc=boeingdb"),"PMASPROJECTSNOW","projectice")
qry <- "SELECT * FROM PMAS.LABOR_OTS_SUMMARY_PHL where LAB_DT > sysdate - 5"
tbl <- dbGetQuery(conn,qry)
connStr
## 2.1
playbill <- read.csv("Data/playbill.csv")
library(readr)
setwd("F:/code/Math550")
setwd("F:/code/Math550")
setwd("C:/code/Math550")
## 2.1
playbill <- read.csv("Data/playbill.csv")
playbill.lm <- lm(CurrentWeek ~ LastWeek, data = playbill)
## 2.3
invoices <- read.csv("Data/invoices.txt", sep="")
invoices.lm <- lm(Time ~ Invoices, data= invoices)
## 2.2
indicators <- read.csv("Data/indicators.txt", sep="")
indicators.lm <- lm(PriceChange ~ LoanPaymentsOverdue, data=indicators)
playbill <- read.csv("Data/playbill.csv")
playbill.lm <- lm(CurrentWeek ~ LastWeek, data = playbill)
plot(x = playbill$CurrentWeek,y = playbill$LastWeek, pch=19)
abline(lsfit(x=playbill$CurrentWeek,y=playbill$LastWeek))
plot(x = playbill$CurrentWeek,y = playbill$LastWeek, pch=19, xlab="Current Week", ylab="Last Week", main="Playbill")
abline(lsfit(x=playbill$CurrentWeek,y=playbill$LastWeek))
indicators <- read.csv("Data/indicators.txt", sep="")
indicators.lm <- lm(PriceChange ~ LoanPaymentsOverdue, data=indicators)
plot(indicators$PriceChange,indicators$LoanPaymentsOverdue,pch=19, xlab="% Price Change", ylab="Loan Payments Overdue", main="Indicators")
abline(lsfit(indicators$PriceChange,indicators$LoanPaymentsOverdue))
invoices <- read.csv("Data/invoices.txt", sep="")
invoices.lm <- lm(Time ~ Invoices, data= invoices)
plot(invoices$Invoices,invoices$Time,pch=19, xlab = "# of Invoices", ylab="Amount of Time", main = "Invoices")
abline(lsfit(invoices$Invoices,invoices$Time))
install.packages("rmarkdown")
install.packages("rmarkdown")
Trace(utils:::unpackPkgZip, edit=TRUE)
trace(utils:::unpackPkgZip, edit=TRUE)
install.packages("rmarkdown")
getOption("repos")
summary(playbill.lm)
round(confint(playbill.lm),2)
round(playbill.lm$coefficients)
round(playbill.lm$residuals)
playbill.lm$effects
round(playbill.lm$coefficients)
predict(playbill.lm, playbill$LastWeek = 400000, interval = "prediction")
predict(playbill.lm, LastWeek = 400000, interval = "prediction")
predict(playbill.lm, data.frame(LastWeek = 400000), interval = "prediction")
## 2.2
indicators <- read.csv("Data/indicators.txt", sep="")
indicators.lm <- lm(PriceChange ~ LoanPaymentsOverdue, data=indicators)
plot(indicators$PriceChange,indicators$LoanPaymentsOverdue,pch=19, xlab="% Price Change", ylab="Loan Payments Overdue", main="Indicators")
abline(lsfit(indicators$PriceChange,indicators$LoanPaymentsOverdue))
summary(indicators.lm)
round(confint(indicators.lm),2)
plot(x = playbill$LastWeek,y = playbill$CurrentWeek, pch=19, ylab="Current Week", xlab="Last Week", main="Playbill")
abline(lsfit(x=playbill$LastWeek,y=playbill$CurrentWeek))
predict(invoices.lm, data.frame(LoanPaymentsOverdue = 0), interval = "prediction")
predict(indicators, data.frame(LoanPaymentsOverdue = 0), interval = "prediction")
predict(indicators.lm, data.frame(LoanPaymentsOverdue = 0), interval = "prediction")
predict(indicators.lm, data.frame(LoanPaymentsOverdue = 4), interval = "confidence")
## 2.3
invoices <- read.csv("Data/invoices.txt", sep="")
invoices.lm <- lm(Time ~ Invoices, data= invoices)
plot(invoices$Invoices,invoices$Time,pch=19, xlab = "# of Invoices", ylab="Amount of Time", main = "Invoices")
abline(lsfit(invoices$Invoices,invoices$Time))
summary(invoices.lm)
round(confint(invoices.lm),2)
round(confint(invoices.lm),4)
predict(invoices.lm, data.frame(Invoices = 130), interval = "prediciton") #point estimate
predict(invoices.lm, data.frame(Invoices = 130), interval = "prediction") #point estimate
predict(invoices.lm, data.frame(Invoices = 130), interval = "confidence") #confidence
library("rmarkdown", lib.loc="~/R/win-library/3.3")
