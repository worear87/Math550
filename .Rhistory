install.packages("devtools")
library(devtools)
library(devtools)
library("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
trace(utils:::unpackPkgZip, edit=TRUE)
install.packages("devtools")
library(devtools)
devtools::install_github("ThomasSiegmund/D3TableFilter")
install_github("ThomasSiegmund/D3TableFilter")
install_github("ThomasSiegmund\\D3TableFilter")
install_github("ThomasSiegmund/D3TableFilter")
install_github("ThomasSiegmund/*")
install_github("ThomasSiegmund")
install_local("D3TableFilter-master")
install_local(path = "D3TableFilter-master/")
install.packages("crosstalk")
install_github("ThomasSiegmund/D3TableFilter", host = 'https://github.com/')
install_github("ThomasSiegmund/D3TableFilter", host = 'https://github.com')
install_github("ThomasSiegmund/D3TableFilter")
install_github("ThomasSiegmund/D3TableFilter/master")
install.packages(RJDBC)
install.packages("RJDBC")
require(RJDBC)
drv <- JDBC("oracle.jdbc.driver.OracleDriver","C:\\code\\ojdbc6.jar")
conn <- dbConnect(drv,"jdbc:oracle:thin:@//OSSG105P.cs.boeing.com:1521/STL_PPHPMAS","PMASPROJECTSNOW","projectice")
conn <- dbConnect(drv,"jdbc:oracle:thin:@//OSSG105P.cs.boeing.com:1521/ora12102dbjan2018","PMASPROJECTSNOW","projectice")
conn <- dbConnect(drv,"jdbc:oracle:thin:@ldap://oidlbr.cs.boeing.com:3097/stl_pphpmas,cn=OracleContext,dc=boeingdb","PMASPROJECTSNOW","projectice")
qry <- "SELECT * FROM PMAS.LABOR_OTS_SUMMARY_PHL where LAB_DT > sysdate - 5"
tbl <- dbSendQuery(conn,qry)
View(tbl)
tbl <- dbGetQuery(conn,qry)
View(tbl)
pmasDB <- "stl_pphpmas"
conn <- dbConnect(drv,paste0("jdbc:oracle:thin:@ldap://oidlbr.cs.boeing.com:3097/",pmasDB,"cn=OracleContext,dc=boeingdb"),"PMASPROJECTSNOW","projectice")
connStr <- paste0("jdbc:oracle:thin:@ldap://oidlbr.cs.boeing.com:3097/",pmasDB,"cn=OracleContext,dc=boeingdb")
connStr
conn <- dbConnect(drv,paste0("jdbc:oracle:thin:@ldap://oidlbr.cs.boeing.com:3097/",pmasDB,",cn=OracleContext,dc=boeingdb"),"PMASPROJECTSNOW","projectice")
ojdbcjarPath <- "C:\\code\\ojdbc6.jar"
drv <- JDBC("oracle.jdbc.driver.OracleDriver",ojdbcjarPath)
pmasDB <- "stl_pphpmas" ### enter the instance you want here
conn <- dbConnect(drv,paste0("jdbc:oracle:thin:@ldap://oidlbr.cs.boeing.com:3097/",pmasDB,",cn=OracleContext,dc=boeingdb"),"PMASPROJECTSNOW","projectice")
qry <- "SELECT * FROM PMAS.LABOR_OTS_SUMMARY_PHL where LAB_DT > sysdate - 5"
tbl <- dbGetQuery(conn,qry)
connStr
shiny::runApp('C:/code/PQA')
runApp('C:/code/PQA')
runApp('C:/code/PQA')
query_ets
packageVersion("tm")
library(devtools)
install.packages(devtools)
install.packages("devtools")
library(devtools)
install_version("tm", version = "0.6.2", repos = "http://cran.us.r-project.org")
install_version("tm", version = "0.6.2")
install.packages("C:/Users/vd491d/Downloads/tm_0.6-2.tar.gz",repos=NULL,type="source")
install.packages("C:/Users/vd491d/Downloads/tm_0.6-2.tar",repos=NULL,type="source")
install.packages("C:/Users/vd491d/Downloads/tm_0.6-2.tar",repos=NULL,type="source")
install.packages("http://cran.r-project.org/src/contrib/Archive/tm/tm_0.6-2.tar.gz", repo=NULL, type="source")
install.packages("http://cran.r-project.org/src/contrib/Archive/tm/tm_0.6-1.tar.gz", repo=NULL, type="source")
install.packages("http://cran.r-project.org/src/contrib/Archive/tm/tm_0.6.tar.gz", repo=NULL, type="source")
install.packages("http://cran.r-project.org/src/contrib/Archive/tm/tm_0.6.tar.gz", repo=NULL, type="source")
install.packages("http://cran.r-project.org/src/contrib/Archive/tm/tm_0.6-2.tar.gz", repo=NULL, type="source")
install_version("tm", version = "0.6.2", repos = "http://cran.us.r-project.org")
library(devtools)
install_version("tm", version = "0.6.2", repos = "http://cran.us.r-project.org")
install_version("tm", version = "0.6-2", repos = "http://cran.us.r-project.org")
install_version("tm", version = "0.6-2", repos = "http://cran.r-project.org")
install_version("tm", version = "0.6-2", repos = "https://cran.r-project.org")
install_version("tm", version = "0.6-2")
install.packages("http://cran.r-project.org/src/contrib/Archive/tm/tm_0.6-1.tar.gz", repo=NULL, type="source")
packageVersion("tm")
shiny::runApp('C:/code/PQA')
install.packages("topicmodels")
runApp('C:/code/PQA')
install.packages("tm")
runApp('C:/code/PQA')
runApp('C:/code/PQA')
shiny::runApp('C:/code/PQA')
runApp('C:/code/PQA')
library(shiny)
library(NLP)
library(topicmodels)
library(tm)
library(SnowballC)
library(RODBC)
library(ggplot2)
library(dplyr)
library(shinyjs)
library(shinyBS)
library(DT)
library(tidytext)
library(RJDBC)
library(DBI)
library(rJava)
library(data.table)
library(plotly)
controlcode <- 122
linenumstart <- 1426
linenumend <- 1500
subsetData <- "FALSE"
featDesc <- "Galley"
UserStopWords <- ""
username <- "TMQ1571"
password <- "Blehhffat2323"
#JAR_DIR <- "/home/atpa/"
JAR_DIR <- "C:/code/PQA/"
drv <- try(JDBC("com.teradata.jdbc.TeraDriver", paste0(JAR_DIR,'terajdbc4.jar')))
.jaddClassPath(paste(JAR_DIR,"terajdbc4.jar",sep=""))
.jaddClassPath(paste(JAR_DIR,"tdgssconfig.jar",sep=""))
drv<-JDBC(driverClass="com.teradata.jdbc.TeraDriver")
loc <- paste("jdbc:teradata://teraprod.ca.boeing.com/TMODE=ANSI,charset=UTF8,USER=", username, ",PASSWORD=", password, sep="")
test <- try(dbConnect(drv,loc), silent = T)
channel1 <- dbConnect(drv, loc)
Query_NC_Latest_t<-paste0("SELECT DISTINCT CA.NC_KEY, CA.PGM_ID, CA.LN_NO, CA.ACC_CD, CA.WRK_LOC_CD, CA.POS_CD, CA.INIT_DT, CA.JOB_ID, CA.SUB_REC_TYP_CD, CA.SUPPL_CD, CA.SUPPL_NM,DEF.NCCA_KEY, DEF.FND_FEAT_CD, FEAT.FEAT_DESC, DEF.ATA_CD, C.ATA_DESC, Y.DESC_DESC, RC.ROOT_CAUSE_DESC, F.CAUSE_GRP_DESC, LD.NARR_TXT AS DISC_NARR_TXT, DT.NARR_TXT AS DISP_NARR_TXT
FROM NCMV.ALL_NC_REV AS CA
LEFT JOIN NCMV.DEF DEF
ON CA.NC_KEY = DEF.NCCA_KEY
LEFT JOIN NCMV.FEAT FEAT
ON DEF.FND_FEAT_CD = FEAT.FEAT_CD
LEFT JOIN NCMV.ATA C
ON DEF.ATA_CD = C.ATA_CD
LEFT JOIN NCMV.DEF_DESC Y
ON DEF.FND_DESC_CD = Y.DESC_CD
LEFT JOIN NCMV.ROOT_CAUSE RC
ON DEF.ROOT_CAUSE_CD = RC.ROOT_CAUSE_CD
LEFT JOIN NCMV.CAUSE_GRP F
ON DEF.CAUSE_GRP_CD = F.CAUSE_GRP_CD
LEFT JOIN NCMV.LATEST_DISC_TXT_DISC_TXT LD
ON CA.NC_KEY = LD.NC_KEY
LEFT JOIN NCMV.LATEST_DISP_TXT_DISP_TXT DT
ON CA.NC_KEY = DT.NC_KEY
WHERE CA.PGM_ID = '", program ,"' AND CA.ACC_CD = '", controlcode, "' AND CA.LN_NO > '", linenumstart, "' AND CA.LN_NO < '", linenumend, "' AND FEAT.FEAT_DESC = '", featDesc, "'")
query_ets <- paste0("SELECT DISTINCT CA.NC_KEY, CA.LN_NO, CA.FND_ACC_CD,
SUBSTR(OWI.ORDER_ID,10,11) AS OWI_ORDER_ID_FIX, OWI.LAB_HRS
FROM NCMV.NC_CA_VISIBILITY AS CA, OWI_STG_INQ_VW.ETS_LABOR_DETAIL AS OWI
WHERE CA.NC_KEY = SUBSTR(OWI.ORDER_ID,10,11) AND CA.PGM_ID = '",program,"'
AND CA.FND_ACC_CD IN '", controlcode, "' AND CA.LN_NO > '", linenumstart, "' AND CA.LN_NO < '", linenumend, "'")
Query_NC_Latest_t <- gsub("\n", " ", Query_NC_Latest_t)
query_ets <- gsub("\n", " ", query_ets)
NC_Latest_rev_table_t <- dbGetQuery(channel1, Query_NC_Latest_t)
ETS_table_t <- dbGetQuery(channel1, query_ets)
Query_NC_Latest_t<-paste0("SELECT DISTINCT CA.NC_KEY, CA.PGM_ID, CA.LN_NO, CA.ACC_CD, CA.WRK_LOC_CD, CA.POS_CD, CA.INIT_DT, CA.JOB_ID, CA.SUB_REC_TYP_CD, CA.SUPPL_CD, CA.SUPPL_NM,DEF.NCCA_KEY, DEF.FND_FEAT_CD, FEAT.FEAT_DESC, DEF.ATA_CD, C.ATA_DESC, Y.DESC_DESC, RC.ROOT_CAUSE_DESC, F.CAUSE_GRP_DESC, LD.NARR_TXT AS DISC_NARR_TXT, DT.NARR_TXT AS DISP_NARR_TXT
FROM NCMV.ALL_NC_REV AS CA
LEFT JOIN NCMV.DEF DEF
ON CA.NC_KEY = DEF.NCCA_KEY
LEFT JOIN NCMV.FEAT FEAT
ON DEF.FND_FEAT_CD = FEAT.FEAT_CD
LEFT JOIN NCMV.ATA C
ON DEF.ATA_CD = C.ATA_CD
LEFT JOIN NCMV.DEF_DESC Y
ON DEF.FND_DESC_CD = Y.DESC_CD
LEFT JOIN NCMV.ROOT_CAUSE RC
ON DEF.ROOT_CAUSE_CD = RC.ROOT_CAUSE_CD
LEFT JOIN NCMV.CAUSE_GRP F
ON DEF.CAUSE_GRP_CD = F.CAUSE_GRP_CD
LEFT JOIN NCMV.LATEST_DISC_TXT_DISC_TXT LD
ON CA.NC_KEY = LD.NC_KEY
LEFT JOIN NCMV.LATEST_DISP_TXT_DISP_TXT DT
ON CA.NC_KEY = DT.NC_KEY
WHERE CA.PGM_ID = '", program ,"' AND CA.ACC_CD = '", controlcode, "' AND CA.LN_NO > '", linenumstart, "' AND CA.LN_NO < '", linenumend, "' AND FEAT.FEAT_DESC = '", featDesc, "'")
program <- 777
Query_NC_Latest_t<-paste0("SELECT DISTINCT CA.NC_KEY, CA.PGM_ID, CA.LN_NO, CA.ACC_CD, CA.WRK_LOC_CD, CA.POS_CD, CA.INIT_DT, CA.JOB_ID, CA.SUB_REC_TYP_CD, CA.SUPPL_CD, CA.SUPPL_NM,DEF.NCCA_KEY, DEF.FND_FEAT_CD, FEAT.FEAT_DESC, DEF.ATA_CD, C.ATA_DESC, Y.DESC_DESC, RC.ROOT_CAUSE_DESC, F.CAUSE_GRP_DESC, LD.NARR_TXT AS DISC_NARR_TXT, DT.NARR_TXT AS DISP_NARR_TXT
FROM NCMV.ALL_NC_REV AS CA
LEFT JOIN NCMV.DEF DEF
ON CA.NC_KEY = DEF.NCCA_KEY
LEFT JOIN NCMV.FEAT FEAT
ON DEF.FND_FEAT_CD = FEAT.FEAT_CD
LEFT JOIN NCMV.ATA C
ON DEF.ATA_CD = C.ATA_CD
LEFT JOIN NCMV.DEF_DESC Y
ON DEF.FND_DESC_CD = Y.DESC_CD
LEFT JOIN NCMV.ROOT_CAUSE RC
ON DEF.ROOT_CAUSE_CD = RC.ROOT_CAUSE_CD
LEFT JOIN NCMV.CAUSE_GRP F
ON DEF.CAUSE_GRP_CD = F.CAUSE_GRP_CD
LEFT JOIN NCMV.LATEST_DISC_TXT_DISC_TXT LD
ON CA.NC_KEY = LD.NC_KEY
LEFT JOIN NCMV.LATEST_DISP_TXT_DISP_TXT DT
ON CA.NC_KEY = DT.NC_KEY
WHERE CA.PGM_ID = '", program ,"' AND CA.ACC_CD = '", controlcode, "' AND CA.LN_NO > '", linenumstart, "' AND CA.LN_NO < '", linenumend, "' AND FEAT.FEAT_DESC = '", featDesc, "'")
query_ets <- paste0("SELECT DISTINCT CA.NC_KEY, CA.LN_NO, CA.FND_ACC_CD,
SUBSTR(OWI.ORDER_ID,10,11) AS OWI_ORDER_ID_FIX, OWI.LAB_HRS
FROM NCMV.NC_CA_VISIBILITY AS CA, OWI_STG_INQ_VW.ETS_LABOR_DETAIL AS OWI
WHERE CA.NC_KEY = SUBSTR(OWI.ORDER_ID,10,11) AND CA.PGM_ID = '",program,"'
AND CA.FND_ACC_CD IN '", controlcode, "' AND CA.LN_NO > '", linenumstart, "' AND CA.LN_NO < '", linenumend, "'")
Query_NC_Latest_t <- gsub("\n", " ", Query_NC_Latest_t)
query_ets <- gsub("\n", " ", query_ets)
NC_Latest_rev_table_t <- dbGetQuery(channel1, Query_NC_Latest_t)
ETS_table_t <- dbGetQuery(channel1, query_ets)
#Create Combined Data file
NC_Latest_rev_table_t$NC_KEY <- trimws(NC_Latest_rev_table_t$NC_KEY)
NC_Latest_rev_table_t$LN_NO <- trimws(NC_Latest_rev_table_t$LN_NO)
ETS_table_t$NC_KEY <- trimws(ETS_table_t$NC_KEY)
ETS_table_t$LN_NO <- trimws(ETS_table_t$LN_NO)
NC_DATA_Tableau<-merge(NC_Latest_rev_table_t, ETS_table_t,by.x=c("NC_KEY", "LN_NO"),by.y=c("NC_KEY", "LN_NO"),all.x=TRUE)
NC_DATA <- NC_DATA_Tableau
#subset data to include NCR's that have labor associted to them only
NC_DATA <- NC_DATA[!is.na(NC_DATA$LAB_HRS),]
z <- NC_DATA['DISC_NARR_TXT']
View(z)
#Create corpus from narrative text (z)
corp <- VCorpus(DataframeSource(z))
z$doc_id <- row_number(z)
View(z)
names(z$DISC_NARR_TXT) <- "text"
View(z)
names(z) <- c("text","doc_id")
View(z)
#Create corpus from narrative text (z)
corp <- VCorpus(DataframeSource(z))
#transform text to lower
corp<-tm_map(corp,content_transformer(tolower))
runApp('C:/code/PQA')
runApp('C:/code/PQA')
setwd("C:/code/Math550")
profSals <- read.csv("Data/ProfessorSalaries.txt", sep="")
View(profSals)
plot(x=profSals$Experience, y=profSals$ThirdQuartile)
plot(x=profSals$Experience, y=profSals$ThirdQuartile, labels=profSals$SampleSize)
plot(x=profSals$Experience, y=profSals$ThirdQuartile)
salaries.lm <- lm(ThirdQuartile ~ Experience, data=profSals)
summary(salaries.lm)
predict(salaries.lm, data.frame(Experience = 6),interval = "prediction")
plot(salaries.lm)
par(mfrow=c(2,2))
plot(salaries.lm)
plot(x=profSals$Experience, y=profSals$ThirdQuartile)
par(mfrow=c(1,1))
plot(x=profSals$Experience, y=profSals$ThirdQuartile)
line(lsfit(profSals$ThirdQuartile~profSals$Experience),add=T)
line(lsfit(profSals$ThirdQuartile~profSals$Experience))
abline(lsfit(y=profSals$ThirdQuartile,x=profSals$Experience))
#now the weighted least squares model
salaries.weight.lm <- lm(ThirdQuartile ~ Experience, data= profSals, weights=1/SD^2)
View(profSals)
#now the weighted least squares model
salaries.weight.lm <- lm(ThirdQuartile ~ Experience, data= profSals, weights=1/SampleSize)
summary(salaries.weight.lm)
par(mfrow=c(2,2))
plot(salaries.weight.lm)
predict(salaries.weight.lm, data.frame(Experience = 6),interval = "prediction")
##chapter 5 #1
par(mfrow=c(1,1))
#now the weighted least squares model
salaries.weight.lm <- lm(ThirdQuartile ~ Experience, data= profSals, weights=sqrt(SampleSize))
par(mfrow=c(2,2))
summary(salaries.weight.lm)
plot(salaries.weight.lm)
predict(salaries.weight.lm, data.frame(Experience = 6),interval = "prediction")
overdue <- read.csv("Data/overdue.txt", sep="")
View(overdue)
View(overdue)
overdue$TYPE <- ifelse(row_number(overdue)<=48, "RESIDENTIAL", "COMMERCIAL")
overdue$TYPE <- ""
overdue$TYPE[1:48] <- "RESIDENTIAL"
View(overdue)
overdue$TYPE[49:96] <- "COMMERCIAL"
as.factor(overdue$TYPE)
overdue$TYPE <- as.factor(overdue$TYPE)
plot(x=overdue$BILL, y=overdue$LATE, pch=ifelse(overdue$TYPE="RESIDENTIAL", 18,22))
plot(x=overdue$BILL, y=overdue$LATE, pch=ifelse(overdue$TYPE=="RESIDENTIAL", 18,22))
##chapter 5 #1
par(mfrow=c(1,1))
plot(x=overdue$BILL, y=overdue$LATE, pch=ifelse(overdue$TYPE=="RESIDENTIAL", 18,22), legend(c("RESIDENTIAL","COMMERCIAL"),pch=c(18,22)))
plot(x=overdue$BILL, y=overdue$LATE, pch=ifelse(overdue$TYPE=="RESIDENTIAL", 18,22))
legend(c("RESIDENTIAL","COMMERCIAL"),pch=c(18,22))
plot(x=overdue$BILL, y=overdue$LATE, pch=ifelse(overdue$TYPE=="RESIDENTIAL", 18,22))
legend(1,1, legend=c("RESIDENTIAL","COMMERCIAL"),pch=c(18,22))
legend(250, legend=c("RESIDENTIAL","COMMERCIAL"),pch=c(18,22))
plot(x=overdue$BILL, y=overdue$LATE, pch=ifelse(overdue$TYPE=="RESIDENTIAL", 18,22))
legend(250, legend=c("RESIDENTIAL","COMMERCIAL"),pch=c(18,22))
legend(250, legend=c("RESIDENTIAL","COMMERCIAL"),pch=c(18,22), cex=0.8)
plot(x=overdue$BILL, y=overdue$LATE, pch=ifelse(overdue$TYPE=="RESIDENTIAL", 18,22))
legend(250, legend=c("RESIDENTIAL","COMMERCIAL"),pch=c(18,22), cex=0.8)
legend(250, 20,legend=c("RESIDENTIAL","COMMERCIAL"),pch=c(18,22), cex=0.8)
legend(200, 20,legend=c("RESIDENTIAL","COMMERCIAL"),pch=c(18,22), cex=0.8)
plot(x=overdue$BILL, y=overdue$LATE, pch=ifelse(overdue$TYPE=="RESIDENTIAL", 18,22))
legend(200, 20,legend=c("RESIDENTIAL","COMMERCIAL"),pch=c(18,22), cex=0.8)
plot(x=overdue$BILL, y=overdue$LATE, pch=ifelse(overdue$TYPE=="RESIDENTIAL", 18,22), ylab = "# of days late", xlab="Amount of overdue bill in $'s")
legend(200, 20,legend=c("RESIDENTIAL","COMMERCIAL"),pch=c(18,22), cex=0.8)
overdue.lm <- lm(LATE ~ BILL, data=overdue)
overdue.lm2 <- lm(LATE ~ BILL + TYPE + TYPE:BILL, data=overdue)
summary(overdue.lm2)
anova(overdue.lm,overdue.lm2)
## just as suspected, the lm2 model that takes type into account looks way better
#run the plots again and add the lines
plot(x=overdue$BILL, y=overdue$LATE, pch=ifelse(overdue$TYPE=="RESIDENTIAL", 18,22), ylab = "# of days late", xlab="Amount of overdue bill in $'s")
legend(200, 20,legend=c("RESIDENTIAL","COMMERCIAL"),pch=c(18,22), cex=0.8)
abline(101.758,-0.191, col="red")
abline(-99.55,0.357,col="blue")
## just as suspected, the lm2 model that takes type into account looks way better
#run the plots again and add the lines
plot(x=overdue$BILL, y=overdue$LATE, pch=ifelse(overdue$TYPE=="RESIDENTIAL", 18,22), ylab = "# of days late", xlab="Amount of overdue bill in $'s")
legend(200, 20,legend=c("RESIDENTIAL","COMMERCIAL"),pch=c(18,22), cex=0.8)
abline(101.758,-0.191, col="red")
abline(101.758-99.55,0.357,col="blue")
## just as suspected, the lm2 model that takes type into account looks way better
#run the plots again and add the lines
plot(x=overdue$BILL, y=overdue$LATE, pch=ifelse(overdue$TYPE=="RESIDENTIAL", 18,22), ylab = "# of days late", xlab="Amount of overdue bill in $'s")
legend(200, 20,legend=c("RESIDENTIAL","COMMERCIAL"),pch=c(18,22), cex=0.8)
abline(101.758,-0.191, col="red")
abline(101.758-99.55,-0.191+0.357,col="blue")
legend(50,50,legend = c("Res reg line","comm reg line"), col=c("red","blue"))
legend(50,60,legend = c("Res reg line","comm reg line"), col=c("red","blue"),lwd=2)
## just as suspected, the lm2 model that takes type into account looks way better
#run the plots again and add the lines
plot(x=overdue$BILL, y=overdue$LATE, pch=ifelse(overdue$TYPE=="RESIDENTIAL", 18,22), ylab = "# of days late", xlab="Amount of overdue bill in $'s")
legend(200, 20,legend=c("RESIDENTIAL","COMMERCIAL"),pch=c(18,22), cex=0.8)
abline(101.758,-0.191, col="red")
abline(101.758-99.55,-0.191+0.357,col="blue")
legend(50,60,legend = c("Res reg line","comm reg line"), col=c("red","blue"),lwd=2, cex=0.5)
## just as suspected, the lm2 model that takes type into account looks way better
#run the plots again and add the lines
plot(x=overdue$BILL, y=overdue$LATE, pch=ifelse(overdue$TYPE=="RESIDENTIAL", 18,22), ylab = "# of days late", xlab="Amount of overdue bill in $'s")
legend(200, 20,legend=c("RESIDENTIAL","COMMERCIAL"),pch=c(18,22), cex=0.8)
abline(101.758,-0.191, col="red")
abline(101.758-99.55,-0.191+0.357,col="blue")
legend(50,60,legend = c("Res reg line","comm reg line"), col=c("red","blue"),lwd=2, cex=0.7)
##chapter 5 #2
par(mfrow=c(1,1))
houston <- read.csv("Data/HoustonChronicle.csv")
View(houston)
houston$Year<-as.factor()
houston$Year<-as.factor(houston$Year)
##chapter 5 #3 Chateau Latour
wine <- read.csv("Data\Latour.txt",sep="")
##chapter 5 #3 Chateau Latour
wine <- read.csv("Data/Latour.txt",sep="")
View(wine)
houston.lm <- lm(X.Repeating.1st.Grade ~ X.Low.income.students, data=houston)
houston.lm.wYr <- lm(X.Repeating.1st.Grade ~ X.Low.income.students + Year + Year:X.Low.income.students,data=houston)
anova(houston.lm,houston.lm.wYr)
plot(x=houston$X.Low.income.students, y=houston$X.Repeating.1st.Grade,
pch=ifelse(houston$Year==1994, 12,16), ylab = "% of Students Repeating First Grade", xlab="% of Low-Income Students")
legend(200, 20,legend=c("1994","2004"),pch=c(12,16), cex=0.8)
legend(0, 18,legend=c("1994","2004"),pch=c(12,16), cex=0.8)
abline(lsfit(x=houston$X.Low.income.students,y=houston$X.Repeating.1st.Grade))
houston.lm2 <- lm(X.Repeating.1st.Grade ~ X.Low.income.students + Year:X.Low.income.students,data=houston)
anova(houston.lm,houston.lm2,houston.lm3)
houston.lm3 <- lm(X.Repeating.1st.Grade ~ X.Low.income.students + Year + Year:X.Low.income.students,data=houston)
anova(houston.lm,houston.lm2,houston.lm3)
summary(houston.lm)
summary(salaries.lm)
predict(salaries.lm, data.frame(Experience = 6),interval = "prediction")
plot(salaries.weight.lm)
summary(salaries.weight.lm)
predict(salaries.weight.lm, data.frame(Experience = 6),interval = "prediction")
wine.lm.red <- lm(Quality ~ EndofHarvest, data=wine)
wine.lm.full <- lm(Quality ~ EndofHarvest + Rain + Rain:EndofHarvest)
wine.lm.full <- lm(Quality ~ EndofHarvest + Rain + Rain:EndofHarvest, data=wine)
summary(wine.lm.red)
summary(wine.lm.full)
anova(wine.lm.red,wine.lm.full)
par(mfrow=c(1,1))
plot(x=profSals$Experience, y=profSals$ThirdQuartile)
abline(lsfit(y=profSals$ThirdQuartile,x=profSals$Experience))
plot(x=profSals$Experience, y=profSals$ThirdQuartile, xlab="Experience", ylab="Third Quartile of Salary")
abline(lsfit(y=profSals$ThirdQuartile,x=profSals$Experience))
par(mfrow=c(2,2))
plot(salaries.lm)
plot(salaries.weight.lm)
plot(x=overdue$BILL, y=overdue$LATE, pch=ifelse(overdue$TYPE=="RESIDENTIAL", 18,22), ylab = "# of days late", xlab="Amount of overdue bill in $'s")
legend(200, 20,legend=c("RESIDENTIAL","COMMERCIAL"),pch=c(18,22), cex=0.8)
##chapter 5 #1 Overdue bills
par(mfrow=c(1,1))
plot(x=overdue$BILL, y=overdue$LATE, pch=ifelse(overdue$TYPE=="RESIDENTIAL", 18,22), ylab = "# of days late", xlab="Amount of overdue bill in $'s")
legend(200, 20,legend=c("RESIDENTIAL","COMMERCIAL"),pch=c(18,22), cex=0.8)
## just as suspected, the lm2 model that takes type into account looks way better
#run the plots again and add the lines
plot(x=overdue$BILL, y=overdue$LATE, pch=ifelse(overdue$TYPE=="RESIDENTIAL", 18,22), ylab = "# of days late", xlab="Amount of overdue bill in $'s")
legend(200, 20,legend=c("RESIDENTIAL","COMMERCIAL"),pch=c(18,22), cex=0.8)
abline(101.758,-0.191, col="red")
abline(101.758-99.55,-0.191+0.357,col="blue")
legend(50,60,legend = c("Res reg line","comm reg line"), col=c("red","blue"),lwd=2, cex=0.7)
plot(x=houston$X.Low.income.students, y=houston$X.Repeating.1st.Grade,
pch=ifelse(houston$Year==1994, 12,16), ylab = "% of Students Repeating First Grade", xlab="% of Low-Income Students")
legend(0, 18,legend=c("1994","2004"),pch=c(12,16), cex=0.8)
abline(lsfit(x=houston$X.Low.income.students,y=houston$X.Repeating.1st.Grade))
summary(overdue.lm2)
## just as suspected, the lm2 model that takes type into account looks way better
#run the plots again and add the lines
plot(x=overdue$BILL, y=overdue$LATE, pch=ifelse(overdue$TYPE=="RESIDENTIAL", 18,22), ylab = "# of days late", xlab="Amount of overdue bill in $'s")
legend(200, 20,legend=c("RESIDENTIAL","COMMERCIAL"),pch=c(18,22), cex=0.8)
abline(101.758,-0.191, col="red")
abline(101.758-99.55,-0.191+0.357,col="blue")
legend(50,60,legend = c("Res reg line","comm reg line"), col=c("blue","red"),lwd=2, cex=0.7)
View(wine)
data <- read.csv("C:/Users/vd491d/Documents/DaveData.csv")
data <- data.table(data)
View(data)
data.lm <- glm(OSORD[1:4000,])
data.lm <- glm(OSORD ~ .,data=data[1:4000,], family = "binomial")
plot(data.lm)
lapply(data, as.factor)
data <- lapply(data,as.factor)
data.lm <- glm(OSORD ~ .,data=data[1:4000,], family = "binomial")
data.lm <- glm(OSORD ~ .,data=data[1:4000,], family = "binomial")
data <- data.table(data)
b <- c(4,5)
x <- c(6,8)
b*x
b*x^t
b*transpose(x)
b*t(x)
b <- matrix(c(4,5),nrow = 2,ncol = 1 )
x <- matrix(c(6,8),nrow = 2,ncol = 1)
b*t(x)
b*x
View(x)
View(b)
x <- matrix(c(6,8),nrow = 1,ncol = 2)
b*x
b%*%x
b%*%t(x)
b%x%x
runApp('C:/code/LaborCheckApp')
runApp('C:/code/LaborCheckApp')
